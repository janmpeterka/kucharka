"""Add event attendee labels

Revision ID: 88f96c0ea05c
Revises: 71380acda9ec
Create Date: 2022-07-05 21:56:47.370564

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "88f96c0ea05c"
down_revision = "71380acda9ec"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attendees",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("portion_size_ratio", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name=op.f("fk_attendees_event_id_events")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_attendees")),
    )
    op.create_index(
        op.f("ix_attendees_event_id"), "attendees", ["event_id"], unique=False
    )
    op.create_table(
        "attendees_have_labels",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("attendee_id", sa.Integer(), nullable=False),
        sa.Column("label_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attendee_id"],
            ["attendees.id"],
            name=op.f("fk_attendees_have_labels_attendee_id_attendees"),
        ),
        sa.ForeignKeyConstraint(
            ["label_id"],
            ["labels.id"],
            name=op.f("fk_attendees_have_labels_label_id_labels"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_attendees_have_labels")),
    )
    op.create_index(
        op.f("ix_attendees_have_labels_attendee_id"),
        "attendees_have_labels",
        ["attendee_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_attendees_have_labels_label_id"),
        "attendees_have_labels",
        ["label_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    op.drop_table("attendees_have_labels")
    op.drop_table("attendees")
