"""Add user-calendar mixin

Revision ID: 5eca4d09a9d9
Revises: c053595974c4
Create Date: 2021-11-28 20:23:01.362092

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5eca4d09a9d9"
down_revision = "c053595974c4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("name", table_name="ingredient_categories")
    op.create_unique_constraint(
        op.f("uq_ingredient_categories_name"), "ingredient_categories", ["name"]
    )
    op.drop_index("name", table_name="label_categories")
    op.create_unique_constraint(
        op.f("uq_label_categories_name"), "label_categories", ["name"]
    )
    op.drop_index("name", table_name="labels")
    op.drop_index("visible_name", table_name="labels")
    op.create_unique_constraint(op.f("uq_labels_name"), "labels", ["name"])
    op.create_unique_constraint(
        op.f("uq_labels_visible_name"), "labels", ["visible_name"]
    )
    op.drop_index("uq_measurement_name", table_name="measurements")
    op.create_unique_constraint(op.f("uq_measurements_name"), "measurements", ["name"])
    op.drop_index("name", table_name="recipe_categories")
    op.create_unique_constraint(
        op.f("uq_recipe_categories_name"), "recipe_categories", ["name"]
    )
    op.drop_index("name", table_name="roles")
    op.create_unique_constraint(op.f("uq_roles_name"), "roles", ["name"])
    op.add_column(
        "users", sa.Column("calendar_hash", sa.String(length=255), nullable=True)
    )
    op.drop_index("email", table_name="users")
    op.drop_index("fs_uniquifier", table_name="users")
    op.drop_index("username", table_name="users")
    op.create_unique_constraint(
        op.f("uq_users_calendar_hash"), "users", ["calendar_hash"]
    )
    op.create_unique_constraint(op.f("uq_users_email"), "users", ["email"])
    op.create_unique_constraint(
        op.f("uq_users_fs_uniquifier"), "users", ["fs_uniquifier"]
    )
    op.create_unique_constraint(op.f("uq_users_username"), "users", ["username"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_username"), "users", type_="unique")
    op.drop_constraint(op.f("uq_users_fs_uniquifier"), "users", type_="unique")
    op.drop_constraint(op.f("uq_users_email"), "users", type_="unique")
    op.drop_constraint(op.f("uq_users_calendar_hash"), "users", type_="unique")
    op.create_index("username", "users", ["username"], unique=False)
    op.create_index("fs_uniquifier", "users", ["fs_uniquifier"], unique=False)
    op.create_index("email", "users", ["email"], unique=False)
    op.drop_column("users", "calendar_hash")
    op.drop_constraint(op.f("uq_roles_name"), "roles", type_="unique")
    op.create_index("name", "roles", ["name"], unique=False)
    op.drop_constraint(
        op.f("uq_recipe_categories_name"), "recipe_categories", type_="unique"
    )
    op.create_index("name", "recipe_categories", ["name"], unique=False)
    op.drop_constraint(op.f("uq_measurements_name"), "measurements", type_="unique")
    op.create_index("uq_measurement_name", "measurements", ["name"], unique=False)
    op.drop_constraint(op.f("uq_labels_visible_name"), "labels", type_="unique")
    op.drop_constraint(op.f("uq_labels_name"), "labels", type_="unique")
    op.create_index("visible_name", "labels", ["visible_name"], unique=False)
    op.create_index("name", "labels", ["name"], unique=False)
    op.drop_constraint(
        op.f("uq_label_categories_name"), "label_categories", type_="unique"
    )
    op.create_index("name", "label_categories", ["name"], unique=False)
    op.drop_constraint(
        op.f("uq_ingredient_categories_name"), "ingredient_categories", type_="unique"
    )
    op.create_index("name", "ingredient_categories", ["name"], unique=False)
    # ### end Alembic commands ###
